- hosts: localhost
  remote_user: root
  vars:
    # Specify whether we want to create things or destroy them
    state: "present"
    # Connection parameters
    username : admin
    password : password
    apiUrl : "https://15.4.7.1"
    verifySsl: False
    # Foreman configuration parameters
    smartProxyFqdn: "foreman.foobar.com"
    pxqFqdn: "pxe.foobar.com"

  tasks:

  # ================================================================================
  # Create the Foreman objects required for PXE booting
  # ================================================================================

    - name: "Get SMART Proxy info"
      AnsibleForemanModule:
        username: "{{ username }}"
        password: "{{ password }}"
        apiUrl: "{{ apiUrl }}"
        verifySsl: "{{ verifySsl }}"
        record:
          smart_proxy:
            name: "{{ smartProxyFqdn }}"
            features:
              - name: "TFTP"
              - name: "DNS"
              - name: "DHCP"
        state: "{{ state }}"
      register: smart_proxy_results

    - name: "Create a Domain for the PXE environment"
      AnsibleForemanModule:
        username: "{{ username }}"
        password: "{{ password }}"
        apiUrl: "{{ apiUrl }}"
        verifySsl: "{{ verifySsl }}"
        record:
          domain:
            name: "{{ pxqFqdn }}"
            dns_id: "{{ smart_proxy_results.actual_record.smart_proxy.id | int }}"
        state: "{{ state }}"
      register: domain_results

    - name: "Create a Subnet for the PXE environment"
      AnsibleForemanModule:
        username: "{{ username }}"
        password: "{{ password }}"
        apiUrl: "{{ apiUrl }}"
        verifySsl: "{{ verifySsl }}"
        record:
          subnet:
            name: "PxeSubnet"
            network: "15.0.0.0"
            mask: "255.0.0.0"
            gateway: "15.1.1.1"
            dns_primary: "15.4.7.1"
            dns_secondary: "15.1.1.1"
            boot_mode: "DHCP"
            domain_ids:
              - "{{ domain_results.actual_record.domain.id }}"
            dhcp_id:  "{{ smart_proxy_results.actual_record.smart_proxy.id  }}"
            tftp_id:  "{{ smart_proxy_results.actual_record.smart_proxy.id  }}"
            dns_id:  "{{ smart_proxy_results.actual_record.smart_proxy.id  }}"
        state: "{{ state }}"
      register: subnet_results
